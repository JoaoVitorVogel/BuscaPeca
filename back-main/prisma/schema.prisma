generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Role {
  id         Int      @id @default(autoincrement())
  enumerator String   @db.VarChar
  updated_at DateTime @default(now()) @db.Timestamp(6)
  created_at DateTime @default(now()) @db.Timestamp(6)

  users User[] @relation("RoleUsers")

  @@map("Role")
}

model User {
  id              Int      @id @default(autoincrement())
  username        String   @db.VarChar
  email           String   @db.VarChar
  password        String   @db.VarChar
  document_number String   @db.VarChar(11)
  is_active       Boolean  @default(true)
  role_id         Int
  updated_at      DateTime @default(now()) @db.Timestamp(6)
  created_at      DateTime @default(now()) @db.Timestamp(6)
  role            Role     @relation("RoleUsers", fields: [role_id], references: [id])

  Seller Seller? @relation("SellerUser")
  Buyer  Buyer?  @relation("BuyerUser")

  @@unique([email])
  @@map("User")
}

model Seller {
  user_id     Int    @id
  seller_code String @db.VarChar(11)

  company_name String @db.VarChar
  trading_name String @db.VarChar

  document_number String @db.VarChar(14)

  email String @db.VarChar

  phone_country_code String @db.VarChar(3)
  phone_area_code    String @db.VarChar(2)
  phone_number       String @db.VarChar(9)

  street       String @db.VarChar
  neighborhood String @db.VarChar
  number       String @db.VarChar
  city         String @db.VarChar
  state        String @db.VarChar(2)
  complement   String @db.VarChar
  postal_code  String @db.VarChar(8)

  updated_at DateTime @default(now()) @db.Timestamp(6)
  created_at DateTime @default(now()) @db.Timestamp(6)

  user          User           @relation("SellerUser", fields: [user_id], references: [id])
  Car           Car[]          @relation("CarSeller")
  purchase_part PurchasePart[]

  @@map("Seller")
}

model Buyer {
  user_id Int @id

  company_name String @db.VarChar
  trading_name String @db.VarChar

  document_number String @db.VarChar(14)

  email String @db.VarChar

  phone_country_code String @db.VarChar(3)
  phone_area_code    String @db.VarChar(2)
  phone_number       String @db.VarChar(9)

  street       String @db.VarChar
  neighborhood String @db.VarChar
  number       String @db.VarChar
  city         String @db.VarChar
  state        String @db.VarChar(2)
  complement   String @db.VarChar
  postal_code  String @db.VarChar(8)

  updated_at DateTime @default(now()) @db.Timestamp(6)
  created_at DateTime @default(now()) @db.Timestamp(6)

  user     User       @relation("BuyerUser", fields: [user_id], references: [id])
  purchase Purchase[]

  @@map("Buyer")
}

model Brand {
  id         Int      @id @default(autoincrement())
  enumerator String   @db.VarChar
  updated_at DateTime @default(now()) @db.Timestamp(6)
  created_at DateTime @default(now()) @db.Timestamp(6)

  models Model[] @relation("BrandModels")

  @@map("Brand")
}

model Model {
  id         Int      @id @default(autoincrement())
  enumerator String   @db.VarChar
  brand_id   Int
  updated_at DateTime @default(now()) @db.Timestamp(6)
  created_at DateTime @default(now()) @db.Timestamp(6)

  brand Brand @relation("BrandModels", fields: [brand_id], references: [id])

  cars Car[] @relation("ModelCars")

  @@map("Model")
}

model Car {
  id            Int       @id @default(autoincrement())
  seller_id     Int
  model_id      Int
  release_year  DateTime  @db.Date
  cost          Float     @db.DoublePrecision
  purchase_date DateTime  @db.Date
  sale_date     DateTime? @db.Date
  updated_at    DateTime  @default(now()) @db.Timestamp(6)
  created_at    DateTime  @default(now()) @db.Timestamp(6)

  seller Seller @relation("CarSeller", fields: [seller_id], references: [user_id])
  model  Model  @relation("ModelCars", fields: [model_id], references: [id])

  parts Part[] @relation("CarParts")

  @@map("Car")
}

model PartStatus {
  id         Int      @id @default(autoincrement())
  enumerator String   @db.VarChar
  updated_at DateTime @default(now()) @db.Timestamp(6)
  created_at DateTime @default(now()) @db.Timestamp(6)

  parts Part[] @relation("PartStatusParts")

  @@map("PartStatus")
}

model PartType {
  id         Int      @id @default(autoincrement())
  enumerator String   @db.VarChar
  updated_at DateTime @default(now()) @db.Timestamp(6)
  created_at DateTime @default(now()) @db.Timestamp(6)

  parts Part[] @relation("PartTypeParts")

  @@map("PartType")
}

model Part {
  id             Int      @id @default(autoincrement())
  car_id         Int
  part_status_id Int
  part_type_id   Int
  description    String   @db.VarChar
  price          Float    @db.DoublePrecision
  updated_at     DateTime @default(now()) @db.Timestamp(6)
  created_at     DateTime @default(now()) @db.Timestamp(6)

  car         Car        @relation("CarParts", fields: [car_id], references: [id])
  part_status PartStatus @relation("PartStatusParts", fields: [part_status_id], references: [id])
  part_type   PartType   @relation("PartTypeParts", fields: [part_type_id], references: [id])

  purchase_part          PurchasePart?            @relation("PartPurchasePart")
  canceled_purchase_part Canceled_purchase_part[] // das vezes que essa compra for cancelada

  @@map("Part")
}

model Purchase {
  id          Int      @id @default(autoincrement())
  description String   @db.VarChar
  buyer_id    Int
  buyer       Buyer    @relation(fields: [buyer_id], references: [user_id])
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  created_at  DateTime @default(now()) @db.Timestamp(6)

  purchase_parts         PurchasePart[]
  canceled_purchase_part Canceled_purchase_part[]

  @@map("Purchase")
}

model PurchasePart {
  purchase_id Int

  seller_id Int
  seller    Seller @relation(fields: [seller_id], references: [user_id])
  part_id   Int    @unique
  part      Part   @relation("PartPurchasePart", fields: [part_id], references: [id])

  purchase Purchase @relation(fields: [purchase_id], references: [id])

  @@id([purchase_id, part_id])
}

model Canceled_purchase_part {
  purchase_id Int

  part_id Int
  part    Part @relation(fields: [part_id], references: [id])

  purchase Purchase @relation(fields: [purchase_id], references: [id])

  @@id([purchase_id, part_id])
}
